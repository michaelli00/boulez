{"version":3,"sources":["App.js","components/Header/Header.js","utils/Constants.js","components/PitchMultiplication/PitchMultiplication.js","components/TotalSerialism/TotalSerialism.js","index.js"],"names":["App","Fragment","Container","className","to","Navbar","bg","variant","expand","Header","fluid","Toggle","aria-controls","Collapse","id","Nav","TWELVE_TONE_DROPDOWN_OPTIONS","Array","keys","map","val","value","parseInt","label","TWELVE_TONE_TO_NOTE_MAPPING","PitchMultiplication","props","useState","pm1Selection","setPM1Selection","pm2Selection","setPM2Selection","pm1NotesString","length","v","join","pm2NotesString","pmResultSet","Set","p1","p2","add","pmResultSelection","sort","a","b","pmResultString","Row","isMulti","closeMenuOnSelect","escapeClearsValue","isSearchable","placeholder","options","classNamePrefix","onChange","vals","newPM1","abcNotation","parserParams","engraverParams","renderParams","viewportHorizontal","newPM2","TotalSerialism","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.0b9ac591.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/container';\nimport Navbar from 'react-bootstrap/navbar';\nimport { NavLink } from \"react-router-dom\";\nimport Blockquote from '@yozora/react-blockquote'\nimport '@yozora/react-blockquote/lib/esm/index.css'\nimport './App.css'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Container className=\"Home\">\n        <h1 className=\"title\">How did Pierre Boulez use mathematics to develop and build upon total serialism?</h1>\n        <div className=\"blurb\">\n          The goal of this project is to analyze mathematical ideas Boulez introduced into some of his total serialist works. As a convenient way of displaying these mathematical ideas, I developed a few web tools to allow readers to play around with how these ideas work. One of the reasons why I decided to build and use these tools as a way to analyze Boulez's music was because of a quote from an interview with Boulez:\n        </div>\n        <Blockquote>\n          <div>\n            Had computers existed at that time I would have put the data through them and made the piece that way. But I did it by hand. I was myself a small and very primitive computer. It was a demonstration through the absurd.<sup>1</sup>\n          </div>\n        </Blockquote>\n        <div className=\"blurb\">\n          From this quote, it's clear that Boulez's total serialist techniques could be modeled using some sort of computer algorithm. In this project, I take this idea to heart. \n        </div>\n        <br/>\n        <div className=\"blurb\">\n          Each page will feature a compositional method Boulez used, explain the mathematics behind the method, provide examples from Boulez's own works, and contain a tool that allows users to play with the compositional method. At the moment, pages have been developed for\n        </div>\n        <br/>\n        <ul>\n          <li> <NavLink to=\"/total-serialism\" className=\"nav-link\">Total Serialism</NavLink></li>\n          <li> <NavLink to=\"/pitch-multiplication\" className=\"nav-link\">Pitch Multiplication</NavLink> </li>\n        </ul>\n      </Container>\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className=\"Footer\">\n        <Container>\n      1. Igor Toronyilalic, “Theartsdesk Q&A: Composer Pierre Boulez,” theartsdesk.com, January 7, 2016, https://www.theartsdesk.com/classical-music/theartsdesk-qa-composer-pierre-boulez.\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport Container from 'react-bootstrap/container';\nimport Navbar from 'react-bootstrap/navbar';\nimport Nav from 'react-bootstrap/nav';\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Container fluid>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <NavLink to=\"/\" className=\"nav-link\">Home</NavLink>\n            <NavLink to=\"/total-serialism\" className=\"nav-link\">Total Serialism</NavLink>\n            <NavLink to=\"/pitch-multiplication\" className=\"nav-link\">Pitch Multiplication</NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n  </Navbar>\n  );\n}\n\nexport default Header;\n","export const TWELVE_TONE_DROPDOWN_OPTIONS = [...Array(12).keys()].map(val => {\n  return {\n    value: parseInt(val),\n    label: parseInt(val),\n  };\n});\n\nexport const TWELVE_TONE_TO_NOTE_MAPPING = ['c', '_d', 'd', '_e', 'e', 'f', '^f', 'g', '_a', 'a', '_b', 'b']\n","import React, { useState } from 'react';\nimport Container from 'react-bootstrap/container';\nimport Navbar from 'react-bootstrap/navbar';\nimport Row from 'react-bootstrap/row';\nimport Select from 'react-select'\nimport Abcjs from 'react-abcjs';\nimport { \n  TWELVE_TONE_DROPDOWN_OPTIONS,\n  TWELVE_TONE_TO_NOTE_MAPPING \n} from '../../utils/Constants';\n\nimport './PitchMultiplication.css';\n\nfunction PitchMultiplication(props) {\n  const [pm1Selection, setPM1Selection] = useState([]);\n  const [pm2Selection, setPM2Selection] = useState([]);\n\n  const handlePM1Changes = (vals) => {\n    const newPM1 = vals.map(val=>val.value);\n    newPM1.sort((a,b) => a - b);\n    setPM1Selection(newPM1);\n  };\n\n  const handlePM2Changes = (vals) => {\n    const newPM2 = vals.map(val=>val.value);\n    newPM2.sort((a,b) => a - b);\n    setPM2Selection(newPM2);\n    \n  };\n\n  const pm1NotesString = pm1Selection.length === 1 ? `${TWELVE_TONE_TO_NOTE_MAPPING[pm1Selection[0]]}2` : `${pm1Selection.map(v => TWELVE_TONE_TO_NOTE_MAPPING[v]).join('2')}2`;\n  const pm2NotesString = pm2Selection.length === 1 ? `${TWELVE_TONE_TO_NOTE_MAPPING[pm2Selection[0]]}2` : `${pm2Selection.map(v => TWELVE_TONE_TO_NOTE_MAPPING[v]).join('2')}2`;\n\n  const pmResultSet = new Set();\n  pm1Selection.map(p1 => pm2Selection.map(p2 => pmResultSet.add((p1 + p2) % 12)));\n  const pmResultSelection = [...pmResultSet];\n  pmResultSelection.sort((a,b) => a - b);\n  const pmResultString = pmResultSelection.length === 1 ? `${TWELVE_TONE_TO_NOTE_MAPPING[pmResultSelection[0]]}2` : `${pmResultSelection.map(v => TWELVE_TONE_TO_NOTE_MAPPING[v]).join('2')}2`;\n\n  return (\n    <React.Fragment>\n      <Container className=\"PitchMultiplication\">\n        <Row>\n          <h1 className=\"title\">Pitch Multiplication</h1>\n        </Row>\n        <Row className=\"content\">\n          <p>\n            The idea behind pitch multiplication is to take two sets from a group of pitch class sets and \"sum of every possible pairing between them\".<sup>2</sup> Note that any duplicate pitch classes in the resulting set are removed. For example, let a = (1 2) and b = (3 4) be pitch class sets. Then the pitch multipication of these two sets, denoted ab, yields (4 5 6). This comes from\n          </p>\n          <ul>\n            <li> 1 + 3  = 4 </li>\n            <li> 2 + 3  = 5 </li>\n            <li> 1 + 4  = 5 (duplicate) </li>\n            <li> 2 + 4  = 6 </li>\n          </ul>\n          <p>\n            asd\n          </p>\n\n          <p>\n            Below is a tool that showcases how pitch multiplication can be used to generate a new pitch class set from two existing pitch class sets. To use it, select pitch classes from the dropdown for both the first and second operand. The resulting pitch class set from pitch multipication will be displayed below\n          </p>\n        </Row>\n        <Row className=\"pitch-multiplication-row\">\n          <div className=\"pm-operand-title\">\n            <h3>Select Pitch Classes for the First Operand</h3>\n            <Select\n              isMulti\n              closeMenuOnSelect={false}\n              escapeClearsValue={false}\n              isSearchable={false}\n              placeholder=\"Select pitch classes\"\n              options={TWELVE_TONE_DROPDOWN_OPTIONS}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              onChange={handlePM1Changes}\n            />\n          </div>\n          <Abcjs\n            abcNotation={`X:1\\nK:C\\nL:4\\n${pm1NotesString}`}\n            parserParams={{}}\n            engraverParams={{}}\n            renderParams={{ viewportHorizontal: true }}\n          />\n          <div className=\"row-info\">\n            {pm1Selection.length ? `Pitch classes used: ${pm1Selection.join(', ')}` : ''}\n          </div>\n        </Row>\n        <Row className=\"pitch-multiplication-row\">\n          <div className=\"pm-operand-title\">\n            <h3>Select Pitch Classes for the Second Operand</h3>\n            <Select\n              isMulti\n              closeMenuOnSelect={false}\n              escapeClearsValue={false}\n              isSearchable={false}\n              placeholder=\"Select pitch classes\"\n              options={TWELVE_TONE_DROPDOWN_OPTIONS}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              onChange={handlePM2Changes}\n            />\n          </div>\n          <Abcjs\n            abcNotation={`X:1\\nK:C\\nL:4\\n${pm2NotesString}`}\n            parserParams={{}}\n            engraverParams={{}}\n            renderParams={{ viewportHorizontal: true }}\n          />\n          <div className=\"row-info\">\n            {pm2Selection.length ? `Pitch classes used: ${pm2Selection.join(', ')}` : ''}\n          </div>\n        </Row>\n        <Row className=\"pitch-multiplication-row\">\n          <h3>Resulting Pitch Classes from Pitch Multiplication</h3>\n          <Abcjs\n            abcNotation={`X:1\\nK:C\\nL:4\\n${pmResultString}`}\n            parserParams={{}}\n            engraverParams={{}}\n            renderParams={{ viewportHorizontal: true }}\n          />\n          <div className=\"row-info\">\n            {pmResultSelection.length ? `Resulting pitch classes: ${pmResultSelection.join(', ')}` : ''}\n          </div>\n        </Row>\n      </Container>\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className=\"Footer\">\n        <Container>\n          2. Saman Samadi, “An Analytical Study on Pierre Boulez’s Le Marteau sans Maître,” Research Catalogue, September 28, 2020, https://www.researchcatalogue.net/view/718708/718709.\n        </Container>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nexport default PitchMultiplication;\n","import Container from 'react-bootstrap/container';\nimport Row from 'react-bootstrap/row';\n\nimport './TotalSerialism.css';\n\nfunction TotalSerialism() {\n  return (\n    <Container className=\"TotalSerialism\">\n      <Row>\n        <h1 className=\"title\">Total Serialism</h1>\n      </Row>\n      <Row>\n        WORK IN PROGRESS\n      </Row>\n    </Container>\n  );\n}\n\nexport default TotalSerialism;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n  HashRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport App from './App';\nimport Header from './components/Header/Header';\nimport PitchMultiplication from './components/PitchMultiplication/PitchMultiplication';\nimport TotalSerialism from './components/TotalSerialism/TotalSerialism';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <Header/>\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<App/>}\n      />\n      <Route \n        path=\"/pitch-multiplication\"\n        element={<PitchMultiplication/>}\n      />\n      <Route\n        path=\"/total-serialism\"\n        element={<TotalSerialism/>}\n      />\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}